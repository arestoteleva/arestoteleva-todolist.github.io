{"ast":null,"code":"var _jsxFileName = \"/Users/dinara/to-do-list/src/Components/SingleTodo.jsx\";\nimport './SingleTodo.css';\nimport buttonImage from './ModalInput/images/Vector.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SingleTodo(_ref) {\n  var _s = $RefreshSig$();\n  let {\n    item,\n    changeStatusSingleToDo\n  } = _ref;\n  function ModalButton() {\n    _s();\n    const [showModal, setShowModal] = useState(false);\n    const handleButtonClick = () => {\n      setShowModal(true);\n    };\n    const handleCloseModal = () => {\n      setShowModal(false);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"todoList\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"checkbox-style\",\n          type: \"checkbox\",\n          checked: item.status === \"done\",\n          onChange: item.status === \"done\" ? () => changeStatusSingleToDo(item.id, \"todo\") : () => changeStatusSingleToDo(item.id, \"done\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textDecoration: item.status === \"done\" ? \"line-through\" : \"none\"\n        },\n        children: [\" \", item.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeStatusSingleToDo(item.id, \"trash\"),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"Image-style\",\n          src: buttonImage,\n          alt: \"Button Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, this), \"trash\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this);\n  }\n  _s(ModalButton, \"uVlnG5KLfXemZk5i5Fl+Cg356FU=\");\n}\n_c = SingleTodo;\n{/* <div class = \"todoList\" style={{display: \"flex\", flexDirection:\"row\"}}></div> */}\nvar _c;\n$RefreshReg$(_c, \"SingleTodo\");","map":{"version":3,"names":["buttonImage","jsxDEV","_jsxDEV","SingleTodo","_ref","_s","$RefreshSig$","item","changeStatusSingleToDo","ModalButton","showModal","setShowModal","useState","handleButtonClick","handleCloseModal","class","children","className","type","checked","status","onChange","id","fileName","_jsxFileName","lineNumber","columnNumber","style","textDecoration","name","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/dinara/to-do-list/src/Components/SingleTodo.jsx"],"sourcesContent":["import './SingleTodo.css';\nimport buttonImage from './ModalInput/images/Vector.png' \n\nexport default function SingleTodo({\n    item, \n    changeStatusSingleToDo,\n\n}) {\n    \n    function ModalButton() {\n        const [showModal, setShowModal] = useState(false);\n      \n        const handleButtonClick = () => {\n          setShowModal(true);\n        };\n      \n        const handleCloseModal = () => {\n          setShowModal(false);\n        };\n\n    \n    return (\n    <div class = \"todoList\"> \n    \n     <div>\n      <input \n       className=\"checkbox-style\"\n       type = \"checkbox\" \n       checked={item.status === \"done\"}\n       onChange={\n        item.status === \"done\" \n         ? () => changeStatusSingleToDo(item.id, \"todo\")\n         : () => changeStatusSingleToDo(item.id, \"done\")\n       }\n       />\n      \n    </div>\n    <p\n      style={{\n        textDecoration: item.status === \"done\" ? \"line-through\" : \"none\",\n      }}\n      > \n      {\" \"}\n      \n      {item.name}</p> \n\n\n      <button onClick={() => changeStatusSingleToDo(item.id, \"trash\")}>\n      <img className='Image-style' src={buttonImage} alt=\"Button Image\" /> \n    trash\n    </button>\n\n   </div>\n    );\n\n}\n}\n{/* <div class = \"todoList\" style={{display: \"flex\", flexDirection:\"row\"}}></div> */}"],"mappings":";AAAA,OAAO,kBAAkB;AACzB,OAAOA,WAAW,MAAM,gCAAgC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExD,eAAe,SAASC,UAAUA,CAAAC,IAAA,EAI/B;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAAA,IAJgC;IAC/BC,IAAI;IACJC;EAEJ,CAAC,GAAAJ,IAAA;EAEG,SAASK,WAAWA,CAAA,EAAG;IAAAJ,EAAA;IACnB,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;IAEjD,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;MAC9BF,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC;IAED,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;MAC7BH,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;IAGL,oBACAT,OAAA;MAAKa,KAAK,EAAG,UAAU;MAAAC,QAAA,gBAEtBd,OAAA;QAAAc,QAAA,eACCd,OAAA;UACCe,SAAS,EAAC,gBAAgB;UAC1BC,IAAI,EAAG,UAAU;UACjBC,OAAO,EAAEZ,IAAI,CAACa,MAAM,KAAK,MAAO;UAChCC,QAAQ,EACPd,IAAI,CAACa,MAAM,KAAK,MAAM,GACnB,MAAMZ,sBAAsB,CAACD,IAAI,CAACe,EAAE,EAAE,MAAM,CAAC,GAC7C,MAAMd,sBAAsB,CAACD,IAAI,CAACe,EAAE,EAAE,MAAM;QAC/C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEA,CAAC,eACNxB,OAAA;QACEyB,KAAK,EAAE;UACLC,cAAc,EAAErB,IAAI,CAACa,MAAM,KAAK,MAAM,GAAG,cAAc,GAAG;QAC5D,CAAE;QAAAJ,QAAA,GAED,GAAG,EAEHT,IAAI,CAACsB,IAAI;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAGfxB,OAAA;QAAQ4B,OAAO,EAAEA,CAAA,KAAMtB,sBAAsB,CAACD,IAAI,CAACe,EAAE,EAAE,OAAO,CAAE;QAAAN,QAAA,gBAChEd,OAAA;UAAKe,SAAS,EAAC,aAAa;UAACc,GAAG,EAAE/B,WAAY;UAACgC,GAAG,EAAC;QAAc;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,SAEtE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL,CAAC;EAGT;EAACrB,EAAA,CA9CYI,WAAW;AA+CxB;AAACwB,EAAA,GArDuB9B,UAAU;AAsDlC,CAAC;AAAoF,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}